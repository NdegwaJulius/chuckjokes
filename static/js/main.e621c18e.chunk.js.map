{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleChange","e","a","caty","target","value","url","console","log","fetch","then","response","json","data","setState","jokes","state","categories","className","onChange","this","map","category","src","icon_url","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAqDeA,E,kDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,aAdmB,uCAcJ,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAOF,EAAEG,OAAOC,MAChBC,EAFO,2DAEmDH,GAChEI,QAAQC,IAAIF,GAHC,SAIPG,MAAMH,GACTI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEC,MAAOF,IACvBN,QAAQC,IAAI,EAAKQ,MAAMD,UARd,2CAdI,sDAGjB,EAAKC,MAAQ,CACXC,WAAY,GACZF,MAAO,IALQ,E,qDASnB,WAAqB,IAAD,OAClBN,MAAM,+CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEG,WAAYJ,S,oBAiBhD,WACE,OAEE,sBAAKK,UAAU,iBAAf,UAEE,oBAAIA,UAAU,WAAd,iCACA,yBAAQC,SAAUC,KAAKpB,aAAvB,UACE,wDACCoB,KAAKJ,MAAMC,WAAWI,KAAI,SAACC,GAAD,OACzB,iCAAwBA,GAAXA,SAGjB,+BACE,qBAAKC,IAAKH,KAAKJ,MAAMD,MAAMS,SAAUC,IAAI,aACzC,oBAAIP,UAAU,eAAd,SAA8BE,KAAKJ,MAAMD,MAAMV,kB,GA5CvCqB,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e621c18e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      categories: [],\n      jokes: {},\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.chucknorris.io/jokes/categories`)\n      .then((response) => response.json())\n      .then((data) => this.setState({ categories: data }));\n  }\n  handleChange = async (e) => {\n    const caty = e.target.value;\n    const url = `https://api.chucknorris.io/jokes/random?category=${caty}`;\n    console.log(url);\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ jokes: data });\n        console.log(this.state.jokes);\n\n      })\n\n  };\n\n\n  render() {\n    return (\n\n      <div className=\"main-container\"      >\n\n        <h1 className=\"headline\">CHUCK NORRIS  JOKES</h1>\n        <select onChange={this.handleChange}>\n          <option>Select By category</option>\n          {this.state.categories.map((category) => (\n            <option key={category}>{category}</option>\n          ))}\n        </select>\n        <di>\n          <img src={this.state.jokes.icon_url} alt='randpics' />\n          <h1 className=\"main-content\">{this.state.jokes.value}</h1>\n        </di>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}